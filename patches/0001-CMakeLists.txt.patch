diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index b4e6aea..7d06ca3 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -8,6 +8,14 @@ include(CheckCSourceRuns)
 
 enable_testing()
 
+set(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)
+if(WIN32)
+    set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)
+endif()
+
+include(${CMAKE_BINARY_DIR}/conanbuildinfo.cmake)
+conan_basic_setup()
+
 find_package(OpenSSL 3.0 REQUIRED)
 
 if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
@@ -93,12 +101,7 @@ if (NOT RELAXED_ALIGNMENT)
   add_definitions(-DSTRICT_ALIGNMENT)
 endif()
 
-if(MSVC)
-  set(BIN_DIRECTORY bin/$<CONFIG>/)
-else()
-  set(BIN_DIRECTORY bin)
-endif()
-
+set(BIN_DIRECTORY bin)
 set(OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${BIN_DIRECTORY})
 
 #set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${OUTPUT_DIRECTORY})
@@ -111,7 +114,7 @@ if ("${OPENSSL_ENGINES_DIR}" STREQUAL "")
 	include(FindPkgConfig)
 	pkg_get_variable(OPENSSL_ENGINES_DIR libcrypto enginesdir)
 	if ("${OPENSSL_ENGINES_DIR}" STREQUAL "")
-		message( FATAL_ERROR "Unable to discover the OpenSSL engines directory. Provide the path using -DOPENSSL_ENGINES_DIR" )
+#		message( FATAL_ERROR "Unable to discover the OpenSSL engines directory. Provide the path using -DOPENSSL_ENGINES_DIR" )
 	endif()
 endif()
 
@@ -202,6 +205,10 @@ set(GOST_ENGINE_SOURCE_FILES
         gost_eng.c
         )
 
+if(WIN32)
+	list(APPEND GOST_ENGINE_SOURCE_FILES gost_engine.rc)
+endif()
+
 set(GOST_PROV_SOURCE_FILES
         gost_prov.c
         gost_prov_cipher.c
@@ -339,48 +346,11 @@ set_target_properties(gost_err PROPERTIES POSITION_INDEPENDENT_CODE ON)
 target_link_libraries(gost_err PRIVATE OpenSSL::Crypto)
 
 # The GOST engine in module form
-add_library(gost_engine MODULE ${GOST_ENGINE_SOURCE_FILES})
+add_library(gost_engine SHARED ${GOST_ENGINE_SOURCE_FILES})
 # Set the suffix explicitly to adapt to OpenSSL's idea of what a
 # module suffix should be
-set_target_properties(gost_engine PROPERTIES
-  PREFIX "" OUTPUT_NAME "gost" SUFFIX ${CMAKE_SHARED_LIBRARY_SUFFIX})
 target_link_libraries(gost_engine PRIVATE gost_core gost_err)
 
-if (NOT MSVC)
-# The GOST engine in library form
-add_library(lib_gost_engine SHARED ${GOST_ENGINE_SOURCE_FILES})
-set_target_properties(lib_gost_engine PROPERTIES
-  COMPILE_DEFINITIONS "BUILDING_ENGINE_AS_LIBRARY"
-  PUBLIC_HEADER gost-engine.h
-  OUTPUT_NAME "gost")
-target_link_libraries(lib_gost_engine PRIVATE gost_core gost_err)
-endif()
-
-# The GOST provider uses this
-add_subdirectory(libprov)
-
-# The GOST provider in module form
-add_library(gost_prov MODULE
-  ${GOST_PROV_SOURCE_FILES} ${GOST_ENGINE_SOURCE_FILES}
-  )
-set_target_properties(gost_prov PROPERTIES
-  PREFIX "" OUTPUT_NAME "gostprov" SUFFIX ${CMAKE_SHARED_LIBRARY_SUFFIX}
-  COMPILE_DEFINITIONS "BUILDING_GOST_PROVIDER;OPENSSL_NO_DYNAMIC_ENGINE"
-  )
-target_link_libraries(gost_prov PRIVATE gost_core libprov)
-
-if (NOT MSVC)
-# The GOST provider in library form
-add_library(lib_gost_prov SHARED
-  ${GOST_PROV_SOURCE_FILES} ${GOST_ENGINE_SOURCE_FILES}
-  )
-set_target_properties(lib_gost_prov PROPERTIES
-  OUTPUT_NAME "gostprov"
-  COMPILE_DEFINITIONS "BUILDING_GOST_PROVIDER;BUILDING_PROVIDER_AS_LIBRARY;OPENSSL_NO_DYNAMIC_ENGINE"
-  )
-target_link_libraries(lib_gost_prov PRIVATE gost_core libprov)
-endif()
-
 set(GOST_SUM_SOURCE_FILES
         gostsum.c
         )
@@ -413,31 +383,11 @@ add_executable(test_tlstree test_tlstree.c)
 target_link_libraries(test_tlstree PUBLIC OpenSSL::Crypto)
 
 # install programs and manuals
-install(TARGETS gostsum gost12sum RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})
-install(FILES gostsum.1 gost12sum.1 DESTINATION ${CMAKE_INSTALL_MANDIR}/man1)
-
-# install engine and provider in module form
-install(TARGETS gost_engine EXPORT GostEngineConfig
-        LIBRARY  DESTINATION ${OPENSSL_ENGINES_DIR}
-        RUNTIME  DESTINATION ${OPENSSL_ENGINES_DIR})
-install(TARGETS gost_prov EXPORT GostProviderConfig
-        LIBRARY  DESTINATION ${OPENSSL_MODULES_DIR}
-        RUNTIME  DESTINATION ${OPENSSL_MODULES_DIR})
-if (NOT MSVC)
-# install engine and provider in library form
-install(TARGETS lib_gost_engine EXPORT GostEngineConfig
-        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
-install(TARGETS lib_gost_prov EXPORT GostProviderConfig
-        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})
-endif()
+install(TARGETS gost_engine
+        LIBRARY  DESTINATION ${CMAKE_INSTALL_LIBDIR}
+        RUNTIME  DESTINATION ${CMAKE_INSTALL_BINDIR})
 
 if (MSVC)
-  install(FILES $<TARGET_PDB_FILE:gostsum> $<TARGET_PDB_FILE:gost12sum>
-    EXPORT GostEngineConfig DESTINATION ${CMAKE_INSTALL_BINDIR} OPTIONAL)
   install(FILES $<TARGET_PDB_FILE:gost_engine>
-    EXPORT GostEngineConfig DESTINATION ${OPENSSL_ENGINES_DIR} OPTIONAL)
-  install(FILES $<TARGET_PDB_FILE:gost_prov>
-    EXPORT GostProviderConfig DESTINATION ${OPENSSL_MODULES_DIR} OPTIONAL)
+    DESTINATION ${CMAKE_INSTALL_BINDIR} OPTIONAL)
 endif()
-install(EXPORT GostEngineConfig DESTINATION GostEngine/share/cmake/GostEngine)
-install(EXPORT GostProviderConfig DESTINATION GostEngine/share/cmake/GostProvider)
